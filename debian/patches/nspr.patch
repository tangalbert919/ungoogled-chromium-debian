Include system copy of prtime.h

--- a/base/time/pr_time_unittest.cc
+++ b/base/time/pr_time_unittest.cc
@@ -7,7 +7,7 @@
 
 #include "base/compiler_specific.h"
 #include "base/macros.h"
-#include "base/third_party/nspr/prtime.h"
+#include <nspr/prtime.h>
 #include "base/time/time.h"
 #include "build/build_config.h"
 #include "testing/gtest/include/gtest/gtest.h"
--- a/base/time/time.cc
+++ b/base/time/time.cc
@@ -14,7 +14,7 @@
 #include "base/logging.h"
 #include "base/macros.h"
 #include "base/strings/stringprintf.h"
-#include "base/third_party/nspr/prtime.h"
+#include <nspr/prtime.h>
 #include "build/build_config.h"
 
 namespace base {
--- a/tools/gn/bootstrap/bootstrap.py
+++ b/tools/gn/bootstrap/bootstrap.py
@@ -467,7 +467,6 @@ def write_gn_ninja(path, root_gen_dir, o
       'base/third_party/dmg_fp/dtoa_wrapper.cc',
       'base/third_party/dmg_fp/g_fmt.cc',
       'base/third_party/icu/icu_utf.cc',
-      'base/third_party/nspr/prtime.cc',
       'base/threading/non_thread_safe_impl.cc',
       'base/threading/post_task_and_reply_impl.cc',
       'base/threading/sequenced_task_runner_handle.cc',
@@ -567,7 +566,7 @@ def write_gn_ninja(path, root_gen_dir, o
     }
 
   if is_linux:
-    libs.extend(['-lrt', '-latomic'])
+    libs.extend(['-lrt', '-latomic', '-lnspr4'])
     ldflags.extend(['-pthread'])
 
     static_libraries['xdg_user_dirs'] = {
--- a/base/BUILD.gn
+++ b/base/BUILD.gn
@@ -52,6 +52,9 @@ config("base_flags") {
       "-Wno-char-subscripts",
     ]
   }
+  ldflags = [
+    "-lnspr4",
+  ]
 }
 
 config("base_implementation") {
@@ -823,8 +826,6 @@ component("base") {
     "third_party/dmg_fp/g_fmt.cc",
     "third_party/icu/icu_utf.cc",
     "third_party/icu/icu_utf.h",
-    "third_party/nspr/prtime.cc",
-    "third_party/nspr/prtime.h",
     "third_party/superfasthash/superfasthash.c",
     "threading/non_thread_safe.h",
     "threading/non_thread_safe_impl.cc",
