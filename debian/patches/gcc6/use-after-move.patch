description: gcc 6 does not support using a unique_ptr after it has been moved
author: Michael Gilbert <mgilbert@debian.org>

--- a/services/resource_coordinator/coordination_unit/coordination_unit_base.cc
+++ b/services/resource_coordinator/coordination_unit/coordination_unit_base.cc
@@ -81,7 +81,10 @@ void CoordinationUnitBase::SetProperty(m
 // static
 CoordinationUnitBase* CoordinationUnitBase::PassOwnershipToGraph(
     std::unique_ptr<CoordinationUnitBase> new_cu) {
-  return new_cu->graph()->AddNewCoordinationUnit(std::move(new_cu));
+  CoordinationUnitGraph* graph = new_cu->graph();
+  if (graph)
+    return graph->AddNewCoordinationUnit(std::move(new_cu));
+  LOG(ERROR) << "CoordinationUnitGraph pointer is null.";
 }
 
 }  // namespace resource_coordinator
--- a/base/task/sequence_manager/task_queue.cc
+++ b/base/task/sequence_manager/task_queue.cc
@@ -68,7 +68,9 @@ TaskQueue::~TaskQueue() {
   // If we've not been unregistered then this must occur on the main thread.
   DCHECK_CALLED_ON_VALID_THREAD(associated_thread_->thread_checker);
   impl_->SetOnNextWakeUpChangedCallback(RepeatingCallback<void(TimeTicks)>());
-  impl_->sequence_manager()->ShutdownTaskQueueGracefully(TakeTaskQueueImpl());
+  internal::SequenceManagerImpl* sequence_manager = impl_->sequence_manager();
+  if (sequence_manager)
+    sequence_manager->ShutdownTaskQueueGracefully(TakeTaskQueueImpl());
 }
 
 TaskQueue::TaskTiming::TaskTiming(bool has_wall_time, bool has_thread_time)
--- a/headless/lib/browser/headless_request_context_manager.cc
+++ b/headless/lib/browser/headless_request_context_manager.cc
@@ -165,7 +165,8 @@ class HeadlessProxyConfigMonitor
       public ::network::mojom::ProxyConfigPollerClient {
  public:
   static void DeleteSoon(std::unique_ptr<HeadlessProxyConfigMonitor> instance) {
-    instance->task_runner_->DeleteSoon(FROM_HERE, instance.release());
+    const scoped_refptr<base::SingleThreadTaskRunner>& runner = instance->task_runner_;
+    runner->DeleteSoon(FROM_HERE, instance.release());
   }
 
   explicit HeadlessProxyConfigMonitor(
